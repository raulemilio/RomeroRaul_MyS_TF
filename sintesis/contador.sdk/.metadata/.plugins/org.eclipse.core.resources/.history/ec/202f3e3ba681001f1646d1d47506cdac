#include "xparameters.h"
#include "xil_io.h"
#include "counter_ip.h"
//====================================================
// comandos "r", "a", "d", "p"
// r -> reset              | 114 | 0x72
// a -> cuenta ascendente  | 97  | 0x61
// d -> cuenta descendente | 100 | 0x64
// p -> pausa              | 112 | 0x70

#define RESET 0
#define AVAILABLE_DATA 1
#define NOT_AVAILABLE_DATA 0

#define RESET_COMAND 114
#define PAUSE 112
#define ASC_COUNT 97
#define DES_COUNT 100


int main (void) 
{
    int i = 0; // variable auxiliar
	int data[5]={ASC_COUNT,DES_COUNT,PAUSE,ASC_COUNT,RESET_COMAND}; // secuencia de prueba
	
   xil_printf("-- Start of the Program Counter --\r\n");
   // reset
   COUNTER_IP_mWriteReg(XPAR_COUNTER_IP_0_S_AXI_BASEADDR,COUNTER_IP_S_AXI_SLV_REG0_OFFSET, RESET);

   while (1)
   {
	   if(i>5){
		   i=0;
	   }
	   // dato disponible
	   COUNTER_IP_mWriteReg(XPAR_COUNTER_IP_0_S_AXI_BASEADDR,COUNTER_IP_S_AXI_SLV_REG1_OFFSET, AVAILABLE_DATA);
	   xil_printf("-- Dato disponible --\r\n");
	   // set  dato
	   COUNTER_IP_mWriteReg(XPAR_COUNTER_IP_0_S_AXI_BASEADDR,COUNTER_IP_S_AXI_SLV_REG2_OFFSET, data[i]);
	   xil_printf("-- Comando --> %d\r\n", data[i]);
	   // disponibilidad del dato por 2 segundos
	   sleep(2000);
	   // dato no disponible
	   COUNTER_IP_mWriteReg(XPAR_COUNTER_IP_0_S_AXI_BASEADDR,COUNTER_IP_S_AXI_SLV_REG1_OFFSET, NOT_AVAILABLE_DATA);
	   xil_printf("-- Dato no disponible --\r\n");
	   sleep(10000);
	   i++;
   }
}



